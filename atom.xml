<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Parth Patil's Blog]]></title>
  <link href="http://parth-patil.github.com/atom.xml" rel="self"/>
  <link href="http://parth-patil.github.com/"/>
  <updated>2013-01-09T22:48:28-08:00</updated>
  <id>http://parth-patil.github.com/</id>
  <author>
    <name><![CDATA[Parth Patil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Group Anagram puzzle in various programming languages]]></title>
    <link href="http://parth-patil.github.com/blog/2013/01/09/group-anagram-puzzle-in-various-programming-languages/"/>
    <updated>2013-01-09T22:13:00-08:00</updated>
    <id>http://parth-patil.github.com/blog/2013/01/09/group-anagram-puzzle-in-various-programming-languages</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Group Anagrams [Java]</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Minus the boilerplate code</span>
</span><span class='line'><span class="n">String</span><span class="o">[]</span> <span class="n">words</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;abc&quot;</span><span class="o">,</span> <span class="s">&quot;bca&quot;</span><span class="o">,</span> <span class="s">&quot;mkzp&quot;</span><span class="o">,</span> <span class="s">&quot;cba&quot;</span><span class="o">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">groups</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;();</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="nl">w:</span> <span class="n">words</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">char</span><span class="o">[]</span> <span class="n">chars</span> <span class="o">=</span> <span class="n">w</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
</span><span class='line'>  <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">chars</span><span class="o">);</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">normalized</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">chars</span><span class="o">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(!</span><span class="n">groups</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">normalized</span><span class="o">))</span>
</span><span class='line'>    <span class="n">groups</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">normalized</span><span class="o">,</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;());</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">groups</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">normalized</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="n">w</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Group Anagrams [Scala]</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="c1">// Minus the boilerplate code</span>
</span><span class='line'><span class="k">val</span> <span class="n">words</span> <span class="k">=</span> <span class="nc">Seq</span><span class="o">(</span><span class="s">&quot;abc&quot;</span><span class="o">,</span> <span class="s">&quot;bca&quot;</span><span class="o">,</span> <span class="s">&quot;mkzp&quot;</span><span class="o">,</span> <span class="s">&quot;cba&quot;</span><span class="o">)</span>
</span><span class='line'><span class="n">words</span> <span class="n">groupBy</span> <span class="o">{</span> <span class="n">word</span> <span class="k">=&gt;</span> <span class="n">word</span><span class="o">.</span><span class="n">toCharArray</span><span class="o">.</span><span class="n">sortWith</span><span class="o">(</span><span class="k">_</span> <span class="o">&lt;</span> <span class="k">_</span><span class="o">).</span><span class="n">mkString</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">)</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Group Anagrams [Coffeescript]</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'>  <span class="nv">words = </span><span class="p">[</span><span class="s">&quot;abc&quot;</span><span class="p">,</span> <span class="s">&quot;bca&quot;</span><span class="p">,</span> <span class="s">&quot;mkzp&quot;</span><span class="p">,</span> <span class="s">&quot;cba&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="nv">result = </span><span class="p">{}</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">word</span> <span class="k">in</span> <span class="nx">words</span>
</span><span class='line'>    <span class="nv">key = </span><span class="p">(</span><span class="nx">word</span><span class="p">.</span><span class="nx">split</span> <span class="s">&#39;&#39;</span><span class="p">).</span><span class="nx">sort</span><span class="p">().</span><span class="nx">join</span> <span class="s">&#39;&#39;</span>
</span><span class='line'>    <span class="nx">result</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span> <span class="k">if</span> <span class="o">not</span> <span class="nx">result</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="o">?</span>
</span><span class='line'>    <span class="nx">result</span><span class="p">[</span><span class="nx">key</span><span class="p">].</span><span class="nx">push</span> <span class="nx">word</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Group Anagrams [Ruby]</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">words</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;abc&quot;</span><span class="p">,</span> <span class="s2">&quot;bca&quot;</span><span class="p">,</span> <span class="s2">&quot;mkzp&quot;</span><span class="p">,</span> <span class="s2">&quot;cba&quot;</span><span class="o">]</span>
</span><span class='line'><span class="n">words</span><span class="o">.</span><span class="n">group_by</span> <span class="p">{</span> <span class="o">|</span><span class="n">w</span><span class="o">|</span> <span class="n">w</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">join</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
